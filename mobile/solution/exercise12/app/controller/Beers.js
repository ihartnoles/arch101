/*
 * File: app/controller/Beers.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FriendsWithBeer.controller.Beers', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Beer'
        ],
        stores: [
            'Beers'
        ],
        views: [
            'beer.Beer',
            'beer.List',
            'beer.FriendsList'
        ],

        refs: {
            searchByBeerView: 'beer'
        },

        control: {
            "beer > beerlist": {
                itemtap: 'onBeerListItemTap'
            },
            "searchByBeerView": {
                pop: 'onNavigationviewPop'
            },
            "beerfriendslist": {
                itemtap: 'onBeerFriendsListItemTap'
            },
            "container#friendrandomizer": {
                show: 'onFriendRandomizerShow'
            }
        }
    },

    onBeerListItemTap: function(dataview, index, target, record, e, eOpts) {
        if (!this.filteredStore) 
        this.filteredStore = Ext.create('FriendsWithBeer.store.Friends');

        this.filteredStore.clearFilter();
        this.filteredStore.filter('favoriteBeer',record.get('name'));
        this.filteredStore.load();

        dataview.up('navigationview').push({
            xtype:  'beerfriendslist',
            title: 'Friends with ' + record.get('name'),
            store: this.filteredStore
        });
    },

    onNavigationviewPop: function(navigationview, view, eOpts) {

        if (view.getXTypes().indexOf('beerfriendslist')) {
            // debugger;
        }
        view.destroy();
    },

    onBeerFriendsListItemTap: function(dataview, index, target, record, e, eOpts) {
        var store = Ext.getStore('Excuses');
        var itemNumber = Math.floor(Math.random() * (store.getCount()))

        dataview.up('navigationview').push({
            xtype: 'friendsdetail',
            title: record.get('firstName') + ' ' + record.get('lastName'),
            rec: record,
            excuse: store.getAt(itemNumber).get("EXCUSE")
        });
    },

    onFriendRandomizerShow: function(component, eOpts) {
        var currentExcuse = "", itemNumber=0, currentFriend = null;
        var estore, fstore;

        // remove any old views
        component.removeAll(false);

        // get random friend
        fstore = Ext.getStore('Friends');
        if (fstore.getCount() === 0) {
            Ext.Msg.alert("Error","You must add friends before using this feature.");   
        } else {

            // get random excuse 
            currentExcuse = "";
            estore = Ext.getStore('Excuses');
            if (estore.getCount() > 0) {
                itemNumber = Math.floor(Math.random() * (estore.getCount()));
                currentExcuse = estore.getAt(itemNumber).get("EXCUSE");
            }

            // select random friend
            itemNumber =  Math.floor(Math.random() * (fstore.getCount()));
            currentFriend = fstore.getAt(itemNumber);

            if (isNaN(currentFriend.get('distance'))) {
                Ext.Msg.alert("foo");
            } else {

                // display view
                component.add({
                    xtype: 'friendsdetail',
                    rec: currentFriend,
                    excuse: currentExcuse
                });
            }
        }
    }

});