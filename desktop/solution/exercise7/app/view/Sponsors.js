/*
 * File: app/view/Sponsors.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SpendingPortal.view.Sponsors', {
    extend: 'Ext.window.Window',
    alias: 'widget.sponsors',

    autoShow: true,
    height: 600,
    width: 472,
    constrain: true,
    layout: {
        type: 'fit'
    },
    closable: false,
    title: 'Congressional Representatives',
    maximizable: true,
    minimizable: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    itemId: 'sponsorsgrid',
                    columnLines: true,
                    store: 'Sponsors',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'HONORIFIC',
                            text: 'Title',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'FIRSTNAME',
                            text: 'First Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'LASTNAME',
                            text: 'Last Name',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'PARTY',
                            text: 'Party',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 58,
                            dataIndex: 'STATE',
                            text: 'State',
                            flex: 1
                        }
                    ],
                    selModel: Ext.create('Ext.selection.RowModel', {
                        mode: 'MULTI'
                    }),
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'combobox',
                                    flex: 1,
                                    itemId: 'stateFilter',
                                    fieldLabel: 'Filter By State',
                                    displayField: 'label',
                                    forceSelection: true,
                                    multiSelect: true,
                                    queryMode: 'local',
                                    store: 'States',
                                    valueField: 'abbr'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});